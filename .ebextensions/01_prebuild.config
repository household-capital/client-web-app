
packages:
  yum:
    git: []
    postgresql93-devel: []
    poppler-utils: []

commands:
  01_create_file_django:
    command: sudo touch /opt/python/log/django.log
  02_change_permissions_django:
    command: sudo chmod 777 /opt/python/log/django.log
  03_change_owner_django:
    command: chown wsgi:wsgi /opt/python/log/django.log
  04_create_file_app:
    command: sudo touch /opt/python/log/app.log
  05_change_permissions_app:
    command: sudo chmod 777 /opt/python/log/app.log
  06_change_owner_app:
    command: chown wsgi:wsgi /opt/python/log/app.log

files:
  "/opt/elasticbeanstalk/hooks/appdeploy/pre/encoding_override.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      localedef -c -f UTF-8 -i en_AU en_AU.UTF-8
      export LC_ALL=en_AU.UTF-8

  "/etc/httpd/conf.d/wsgi_auth.conf":
    mode: "000644"
    owner: root
    group: root
    content: |
      WSGIPassAuthorization On

  "/etc/systemd/system/celery.service":
    mode: "000755"
    owner: root
    group: root
    content: |
      [Unit]
      Description=Celery Service
      After=network.target

      [Service]
      Type=forking
      User=celery
      Group=celery
      EnvironmentFile=/etc/celery/celery.conf
      # Run ExecStartPre with root-permissions
      PermissionsStartOnly=true
      ExecStartPre=-/bin/mkdir ${CELERYD_PID_DIR}
      ExecStartPre=-/bin/chown -R celery:celery ${CELERYD_PID_FILE}

      #Run ExecStart with User=celery / Group=celery
      WorkingDirectory=/home/django/django_project
      ExecStart=/bin/sh -c '${CELERY_BIN} multi start ${CELERYD_NODES} \
        -A ${CELERY_APP} --pidfile=${CELERYD_PID_FILE} \
        --logfile=${CELERYD_LOG_FILE} --loglevel=${CELERYD_LOG_LEVEL} ${CEL
      ERYD_OPTS}'
      ExecStop=/bin/sh -c '${CELERY_BIN} multi stopwait ${CELERYD_NODES} \
        --pidfile=${CELERYD_PID_FILE}'
      ExecReload=/bin/sh -c '${CELERY_BIN} multi restart ${CELERYD_NODES} \

        -A ${CELERY_APP} --pidfile=${CELERYD_PID_FILE} \
        --logfile=${CELERYD_LOG_FILE} --loglevel=${CELERYD_LOG_LEVEL} ${CEL
      ERYD_OPTS}'
      TimeoutStopSec=2

      [Install]
      WantedBy=multi-user.target

  "/etc/celery/celery.conf":
    mode: "000755"
    owner: root
    group: root
    content: |
      # Name of nodes to start
      # here we have a single node
      CELERYD_NODES="worker1"
      # or we could have three nodes:
      #CELERYD_NODES="w1 w2 w3"

      # Absolute or relative path to the 'celery' command:
      #CELERY_BIN="/usr/local/bin/celery"
      CELERY_BIN="/opt/python/run/venv/bin/celery"

      # App instance to use
      # comment out this line if you don't use an app
      CELERY_APP="config"
      # or fully qualified:
      #CELERY_APP="proj.tasks:app"

      # How to call manage.py
      CELERYD_MULTI="multi"

      # Extra command-line arguments to the worker
      CELERYD_OPTS="--time-limit=9000 --concurrency=8"

      # - %n will be replaced with the first part of the nodename.
      # - %I will be replaced with the current child process index
      #   and is important when using the prefork pool to avoid race condit
      ions.
      CELERYD_PID_DIR="/var/run/celery"
      CELERYD_PID_FILE="/var/run/celery/%n.pid"
      CELERYD_LOG_FILE="/var/log/celery/%n%I.log"
      CELERYD_LOG_LEVEL="INFO"

      # you may wish to add these options for Celery Beat
      CELERYBEAT_PID_FILE="/var/run/celery/beat.pid"
      CELERYBEAT_LOG_FILE="/var/log/celery/beat.log"